{"version":3,"sources":["components/Cards.js","components/Dat.js","App.js","index.js","App.module.css","components/card.module.css"],"names":["Cards","props","className","styles","card","type","value","Dat","val","median","values","sort","a","b","half","Math","floor","length","App","useState","site","setSite","dataset","setDataset","stats","setMean","input","setInput","useEffect","console","log","getJSON","err","data","alert","round","avg","standardDeviation","mode","reloadButton","onClick","s","l","random","toString","Title","dset","map","d","cards","mean","form","onSubmit","event","preventDefault","Number","onChange","target","url","callback","xhr","XMLHttpRequest","open","responseType","onload","status","response","send","array","total","count","forEach","item","index","n","reduce","sqrt","x","pow","bestStreak","bestElem","slice","y","currentStreak","currentElem","i","ReactDOM","render","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.78d12f31.chunk.js","sourcesContent":["import styles from './card.module.css'\r\nconst Cards = (props) => {\r\n    return(\r\n        <div className={styles.card}>\r\n            <h2>{props.type}</h2>\r\n            <hr/>\r\n            <h1>{props.value}</h1>\r\n        </div>\r\n    )\r\n}\r\nexport default Cards;","import './Dat.css'\r\nconst Dat = (props)=>{\r\n    return(\r\n        <div className='item'>\r\n            {props.val}\r\n        </div>\r\n    )\r\n}\r\nexport default Dat;","import { useEffect, useState } from 'react';\nimport styles from './App.module.css'\nimport Cards from './components/Cards'\nimport Dat from './components/Dat'\nfunction median(values){\n  values.sort(function(a,b){\n    return a-b;\n  });\n\n  var half = Math.floor(values.length / 2);\n  \n  if (values.length % 2)\n    return values[half];\n  \n  return (values[half - 1] + values[half]) / 2.0;\n}\nfunction App() {\n  const [site,setSite] = useState('https://assignment-aa0ef-default-rtdb.firebaseio.com/data.json');\n  const [dataset,setDataset] = useState([]);\n  const [stats, setMean] = useState({});\n  const [input, setInput] = useState();\n  const sum = (arr) => {\n    var sum =0;\n    for(var i=0;i<arr.length;i++){\n      sum+=arr[i];\n    }\n    return sum;\n  }\n  useEffect(()=>{\n    console.log(site);\n    getJSON(site, function(err, data) {\n    if (err !== null) {\n      alert('Something went wrong: ' + err);\n    }\n    else {\n      setMean({\"mean\":Math.round(avg(data) * 100) / 100, \"median\":Math.round(median(data) * 100) / 100, \"standardDeviation\": Math.round(standardDeviation(data) * 100) / 100,\"mode\":Math.round(mode(data) * 100) / 100});\n      setDataset(data);\n    }\n  });\n  },[site])\n  const submitHandler = (event) => {\n    event.preventDefault();\n    if(input===''){\n      return;\n    }\n    else{\n      var d = dataset;\n      \n      var data = [Number(input),...d]\n      setInput('');\n      setMean({\"mean\":Math.round(avg(data) * 100) / 100, \"median\":Math.round(median(data) * 100) / 100, \"standardDeviation\": Math.round(standardDeviation(data) * 100) / 100,\"mode\":Math.round(mode(data) * 100) / 100});\n      setDataset([Number(input),...d]);\n    }\n  }\n  const reload = () => {\n    var s = 'https://assignment-aa0ef-default-rtdb.firebaseio.com/';\n    var l = Math.floor(Math.random() * (6 - 1) + 1);\n    s = s+'data'+l.toString()+'.json';\n    console.log(l);\n    setSite(s);\n  }\n  const changeHandler = (event) => {\n    console.log(event.target.value);\n    setInput(event.target.value);\n  }\n  return (\n    <div>\n      <div className={styles.reloadButton}>\n      \n      <button onClick={reload}>Reload</button>\n      </div>\n      <h2 className={styles.Title}>Data Set</h2>\n      <div className={styles.dset}>\n        {dataset.map((d)=>(\n          <Dat val={d}></Dat>\n        ))}\n      </div>\n      <div className={styles.cards}>\n        <Cards type=\"Mean\" value={stats.mean}/>\n        <Cards type=\"Median\" value={stats.median}/>\n        <Cards type=\"Standard Deviation\" value={Math.round(stats.standardDeviation)}/>\n        <Cards type=\"Mode\" value={stats.mode}/>\n      </div>\n      <form className={styles.form} onSubmit={submitHandler}>\n        <input type=\"text\" onChange={changeHandler} value={input}></input>\n        <button type=\"submit\">Add</button>\n      </form>\n\n    </div>\n  );\n}\n\nexport default App;\nvar getJSON = function(url, callback) {\n  var xhr = new XMLHttpRequest();\n  xhr.open('GET', url, true);\n  xhr.responseType = 'json';\n  xhr.onload = function() {\n    var status = xhr.status;\n    if (status === 200) {\n      callback(null, xhr.response);\n    } else {\n      callback(status, xhr.response);\n    }\n  };\n  xhr.send();\n};\nconst avg = (array) => {\n  var total = 0;\n  var count = 0;\n\n  array.forEach(function(item, index) {\n      total += item;\n      count++;\n  });\n\n  return total / count;\n}\nconst standardDeviation = (array) => {\n  const n = array.length;\n  const mean = array.reduce((a, b) => a + b) / n;\n  return Math.sqrt(array.map(x => Math.pow(x - mean, 2)).reduce((a, b) => a + b) / n);\n}\nconst mode =(a)=>{\n  a = a.slice().sort((x, y) => x - y);\n\n  var bestStreak = 1;\n  var bestElem = a[0];\n  var currentStreak = 1;\n  var currentElem = a[0];\n\n  for (let i = 1; i < a.length; i++) {\n    if (a[i-1] !== a[i]) {\n      if (currentStreak > bestStreak) {\n        bestStreak = currentStreak;\n        bestElem = currentElem;\n      }\n\n      currentStreak = 0;\n      currentElem = a[i];\n    }\n\n    currentStreak++;\n  }\n\n  return currentStreak > bestStreak ? currentElem : bestElem;\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />,document.getElementById('root'));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"reloadButton\":\"App_reloadButton__2Rk_n\",\"cards\":\"App_cards__1D9x4\",\"form\":\"App_form__3-Sbt\",\"dset\":\"App_dset__1ZU0u\",\"Title\":\"App_Title__10WK_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"card_card__9ozzv\",\"lol\":\"card_lol__2UDYB\"};"],"sourceRoot":""}